version: ~> 1.0
language: c
os: linux
dist: bionic
env:
  global:
   # Encrypted COVERITY_SCAN_TOKEN
   - secure: "tOyTDMo6tub+83ZMJEPIpmAP3E6Ete8H6+LaXoM6vJCVTaBtdEPwrZdYXRBm3o71hL6DncBE5Y0sGhV0EHDhQffNZnRt6PBcUBlPtS7lDV6ir+44OY+BvgklIAZy8Vz+b3gxWjKD84Dml4sF5T4fir6gFPcgsfCUvi1H8jtmEdHQn5lyNjwZ6CFsURzTQ6GWT0TeWhWTXKiBwJlPYpF3ArQ5tBpNdCKQDSPPPEKtAKKfg48wJRVCwVXChfwfRH4TKbPeZrhv0NrF+YmXXioaSCJ+mKrxPjlQNNhXFIdC7/hG5lSk8Rymw1CF4WjP2bZvVW16EIHl5ft+m+CrYXRMpeA2hAe2uxESIIpaAKKDapOOTUkkMVK/5UmCoBAGDugH/9UmdLvlrs3QCUB8nztdmnja+NGz8ZupWJWo6l8Uv4TPoHIPK746VM/hdg6E2CgbFQ0UXe9v6XDJ/5gd7AaSc6Z4Tslf/iNgifh6ZXuSUKSoDl/mGjF8wd/lYTTbG1r+fMuZUJC6W05iw9QeI3/iGeBjPZKeqxVslfvXhngvj4VUSbTOpB8tFprz1i1d13h/PEmlJkNH9bu0JwIHc8OjwaFpVC1Ewi/cce8Qn8H30+wUqW+BC/JY/5+WShHn7NR53pfi7S4E9+5oAdBu/jo7rZIeCkNI0nitpzi0TkF00Jo="
jobs:
  include:
  - name: "Coverity"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="coverity"
    compiler: clang
    group: edge
    addons:
      coverity_scan:
        project:
          name: "libyal/libfplist"
          description: "Build submitted via Travis CI"
        notification_email: joachim.metz@gmail.com
        build_command_prepend: "./synclibs.sh && ./autogen.sh && ./configure"
        build_command: "make -j4"
        branch_pattern: master
  - name: "Linux with clang"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-clang"
    compiler: clang
    group: edge
  - name: "Linux with gcc"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc"
    compiler: gcc
    group: edge
  - name: "Linux with gcc on s390x (Docker)"
    env:
    - DOCKERHUB_REPO="s390x/ubuntu"
    - DOCKERHUB_TAG="bionic"
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="docker"
    compiler: gcc
    group: edge
    services:
    - docker
  - name: "Linux with gcc without optimization"
    env:
    - CONFIGURE_OPTIONS="--enable-shared=no"
    - CFLAGS="--coverage -O0"
    - CPPFLAGS="-DOPTIMIZATION_DISABLED"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-no-optimization"
    compiler: gcc
    group: edge
  - name: "Linux with gcc and shared libraries"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-shared"
    compiler: gcc
    group: edge
  - name: "Mac OS 10.14 with clang"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="macos-clang"
    compiler: clang
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="macos-gcc"
    compiler: gcc
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc and pkgbuild"
    env:
    - CONFIGURE_OPTIONS="--disable-dependency-tracking --prefix=/usr/local"
    - TARGET="macos-gcc-pkgbuild"
    compiler: gcc
    os: osx
    osx_image: xcode11
before_install:
- .travis/before_install.sh
install:
- .travis/install.sh
script:
- .travis/script.sh
after_success:
- if test ${TARGET} = "linux-gcc-no-optimization"; then
    for DIRECTORY in `find . -maxdepth 1 -type d`; do (cd ${DIRECTORY} && find . -maxdepth 1 -name \*.gcno -type f -exec gcov -pb {} \;) done;
    curl -o codecov.sh -s https://codecov.io/bash && /bin/bash ./codecov.sh -n ${TARGET} -X gcov;
  fi
